apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-agent
  namespace: spire
data:
  agent.conf: |
    agent {
      data_dir = "/run/spire/data"
      log_level = "DEBUG"
      log_file = "/run/spire/logs/spire-agent.log"
      server_address = "spire-server"
      server_port = "8081"
      socket_path = "/run/spire/sockets/agent.sock"
      trust_bundle_path = "/run/spire/bundle/bundle.crt"
      trust_domain = "example.org"
    }

    plugins {
      # NodeAttestor "x509pop" {
      #     plugin_data {
      #         private_key_path = "/run/spire/certs/agent-key.pem"
      #         certificate_path = "/run/spire/certs/agent-cert.pem"
      #     }
      # }

      NodeAttestor "k8s_psat" {
          plugin_data {
              cluster = "demo-cluster"
          }
      }

      # NodeAttestor "k8s_sat" {
      #   plugin_data {
      #     # NOTE: Change this to your cluster name
      #     cluster = "demo-cluster"
      #   }
      # }

      KeyManager "memory" {
        plugin_data {
        }
      }

      WorkloadAttestor "k8s" {
        plugin_data {
          # Defaults to the secure kubelet port by default.
          # Minikube does not have a cert in the cluster CA bundle that
          # can authenticate the kubelet cert, so skip validation.
          skip_kubelet_verification = true
        }
      }

      # WorkloadAttestor "unix" {
      #     plugin_data {
      #     }
      # }
    }

    telemetry {
        Prometheus {
            host = "0.0.0.0"
            port = 8089
        }

        Statsd = [
            {
                address = "graphite-statsd.spire.svc.cluster.local:8125"
            },
        ]
    }

    health_checks {
      listener_enabled = true
      bind_address = "0.0.0.0"
      bind_port = "8080"
      live_path = "/live"
      ready_path = "/ready"
    }
